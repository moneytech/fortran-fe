AC_INIT(g95.h)
AM_INIT_AUTOMAKE(g95, 0.18)
AM_CONFIG_HEADER(config.h)

#############################################################################
AC_PROG_CC
AC_CANONICAL_HOST

AC_C_CONST

case "$host" in 
hppa*) CFLAGS="-Ae $CFLAGS";;
esac

#############################################################################
# Find GMP (GNU Multi-Precision) library:

AC_ARG_WITH(gmp-dir, [--with-gmp-dir=PATH       Specify directory for the GMP library])

if test "x$with_gmp_dir" != x -a -d "$with_gmp_dir"; then
	CPPFLAGS="-I$with_gmp_dir $CPPFLAGS"
	LDFLAGS="-L$with_gmp_dir/.libs $LDFLAGS"
fi

AC_FUNC_ALLOCA([AC_MSG_ERROR([alloca not found])])

AC_CHECK_HEADER(gmp.h, [], [AC_MSG_ERROR([gmp.h not found])])

AC_MSG_CHECKING([for correct version of gmp.h])
AC_TRY_COMPILE([#include <gmp.h>],[
#if __GNU_MP_VERSION < 3
       choke me
#endif
], [AC_MSG_RESULT([yes])],
   [AC_MSG_ERROR([gmp version 3.0 or later is required])])

AC_MSG_CHECKING([for mpf_init in -lgmp])

LIBS="$LIBS -lgmp"

AC_TRY_LINK([#include <gmp.h>], [mpf_t n; mpf_init(n);],
  [AC_MSG_RESULT([yes])],  [AC_MSG_ERROR([could not link with libgmp])])


#############################################################################
# --enable-debug to turn on debugging (currently defaults to yes)

AC_ARG_ENABLE(debug, [  --enable-debug          compile for debugging],
              [ok=$enableval], [ok=yes])
if test "$ok" = "yes"; then
        CFLAGS="-g"
	# Add more compiler warnings if we are using gcc:
	# ($GCC is set to "yes" by AC_PROG_CC if we are using gcc.)
	if test "$GCC" = "yes"; then
        	CFLAGS="$CFLAGS -pedantic -Wall"
	fi

        AC_DEFINE(G95_DEBUG,1,[Define to turn on debugging checks.])
fi

#############################################################################

AC_OUTPUT(Makefile)

